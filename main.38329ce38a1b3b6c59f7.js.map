{"version":3,"sources":["webpack:///./js/promise-task3.js"],"names":["makeTransaction","transaction","Promise","resolve","reject","min","max","delay","Math","floor","random","setTimeout","id","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":"2JAQMA,EAAkB,SAAAC,GACtB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAN+BC,EAAKC,EAM9BC,GANyBF,EAMS,IANJC,EAMS,IALxCE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAMlDM,YAAW,WAGT,GAFmBH,KAAKE,SAAW,GAEnB,KACNE,EAAOX,EAAPW,GACRT,EAAQ,CAAES,KAAIL,eAEdH,EAAOH,EAAYW,MAEpBL,OAIDM,EAAa,SAAC,GAAkB,IAAhBD,EAAgB,EAAhBA,GAAIL,EAAY,EAAZA,MACxBO,QAAQC,IAAR,eAA2BH,EAA3B,iBAA8CL,EAA9C,OAGIS,EAAW,SAAAJ,GACfE,QAAQG,KAAR,gCAA6CL,EAA7C,8BAaFZ,EAAgB,CAAEY,GAAI,GAAIM,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAEhEhB,EAAgB,CAAEY,GAAI,GAAIM,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAEhEhB,EAAgB,CAAEY,GAAI,GAAIM,OAAQ,KAAMC,KAAKN,GAAYO,MAAMJ,GAE/DhB,EAAgB,CAAEY,GAAI,GAAIM,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,K","file":"main.38329ce38a1b3b6c59f7.js","sourcesContent":["// Перепиши функцию makeTransaction() так,\r\n// чтобы она не использовала callback - функции onSuccess и onError,\r\n// а принимала всего один параметр transaction и возвращала промис.\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = transaction => {\r\n  return new Promise((resolve, reject) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n    setTimeout(() => {\r\n      const canProcess = Math.random() > 0.3;\r\n\r\n      if (canProcess) {\r\n        const { id } = transaction;\r\n        resolve({ id, delay });\r\n      } else {\r\n        reject(transaction.id);\r\n      }\r\n    }, delay);\r\n  });\r\n};\r\n\r\nconst logSuccess = ({ id, delay }) => {\r\n  console.log(`Transaction ${id} processed in ${delay}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n/*\r\n * Работает так\r\n */\r\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\r\n/*\r\n * Должно работать так\r\n */\r\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\r\n"],"sourceRoot":""}